services:

  # Nginx Web Server Service
  nginx_api:
    image: nginx:alpine
    container_name: nginx_api
    ports:
      - 8080:80
    volumes:
      - ./api:/var/www/html
      - ./nginx/api.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - mysql
      - api
    networks:
      - app-network

  # Will be adding this back later for prod deployment
  # nginx_client:
  #   image: nginx:alpine
  #   container_name: nginx_client
  #   ports:
  #     - 3000:80
  #   volumes:
  #     - ./client:/app
  #     - ./nginx/client.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - client
  #   networks:
  #     - app-network

  # Laravel Backend Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    volumes:
      - ./api:/var/www/html
      - ./api/vendor:/var/www/html/vendor
    depends_on:
      - mysql
    networks:
      - app-network

  # Nuxt.js Frontend Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - 3000:3000
      - 24678:24678 
    # environment:
      # - NUXT_HOST=0.0.0.0
      # - NUXT_PORT=3000
    depends_on:
      - api
    networks:
      - app-network

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - 4306:3306
    environment:
      - MYSQL_DATABASE=larasocialite
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - app-network
  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    ports:
      - 8025:8025 # Expose Mailpit web interface
      - 1025:1025 # Expose SMTP port
    volumes:
      - ./data/mailpit:/data # Persistent volume for Mailpit data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    depends_on:
      - api
    networks:
      - app-network
    restart: unless-stopped



# volumes:
#   data:

networks:
  app-network:
    driver: bridge